blueprint:
  name: Ventilation control
  description: Control ventilation based on time and settings
  domain: automation
  input:
    day_vent_time:
      name: Day Vent Time
      description: Time to start day ventilation
      default: "08:00"
      selector:
        time: {}
    night_vent_time:
      name: Night Vent Time
      description: Time to start night ventilation
      default: "20:30"
      selector:
        time: {}
    full_vent_time:
      name: Full Vent Time
      description: Time to start full ventilation
      default: "21:30"
      selector:
        time: {}
    day_vent:
      name: Day Vent
      description: Ventilation level during the day
      default: 50
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    night_vent:
      name: Night Vent
      description: Ventilation level during the night
      default: 30
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"
    full_vent:
      name: Full Vent
      description: Ventilation level during full ventilation
      default: 100
      selector:
        number:
          min: 0
          max: 100
          unit_of_measurement: "%"

trigger:
  - platform: time
    at: !input 'day_vent_time'
  - platform: time
    at: !input 'night_vent_time'
  - platform: time
    at: !input 'full_vent_time'

action:
  - variables:
      vent_value: >
        {% set current_time = trigger.now.time().strftime('%H:%M:%S') %}
        {% if current_time == states('input_datetime.day_vent_time')[0:8] %}
          {{ states('input_number.day_vent') }}
        {% elif current_time == states('input_datetime.night_vent_time')[0:8] %}
          {{ states('input_number.night_vent') }}
        {% elif current_time == states('input_datetime.full_vent_time')[0:8] %}
          {{ states('input_number.full_vent') }}
        {% endif %}
  - service: modbus.write_register
    data:
      address: 4210
      unit: 10
      value: "{{ vent_value }}"
      hub: RS485
  - service: input_number.set_value
    target:
      entity_id: input_number.slider2
    data:
      value: "{{ vent_value }}"

mode: single
